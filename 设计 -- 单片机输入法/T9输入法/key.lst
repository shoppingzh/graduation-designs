C51 COMPILER V9.01   KEY                                                                   05/12/2018 12:37:04 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN key.obj
COMPILER INVOKED BY: D:\Dev\Keil\C51\BIN\C51.EXE anjian\key.c LARGE BROWSE INCDIR(.\anjian;.\12864) DEBUG OBJECTEXTEND P
                    -RINT(.\key.lst) OBJECT(key.obj)

line level    source

   1          #include <reg52.h>//包含头文件
   2          #include "key.h"
   3          
   4          #define uchar unsigned char
   5          #define uint unsigned int
   6          #define PORT P2
   7          //unsigned char const dofly[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,
   8          //                    0x77,0x7c,0x39,0x5e,0x79,0x71};//0-F，数码管来显示按下键的值。
   9          
  10          
  11          //void main()
  12          //{
  13          //      uchar key;
  14          //      P2=0x00;//1数码管亮 按相应的按键，会显示按键上的字符
  15          //      while(1)
  16          //      {
  17          //              key=keyscan();//调用键盘扫描，
  18          //              switch(key)
  19          //              {
  20          //                      case 0x7e:P0=dofly[0];break;//0 按下相应的键显示相对应的码值 原理就是高四位一列低四位一列的组
  21          //                      //合。0111    1110 7e    0表示按键后为0，1表示没有按键按下的。即P3.7与P3.1连接为低电平，为S1键
  22          //                      //其他类推。
  23          //                      case 0x7d:P0=dofly[1];break;//1
  24          //                      case 0x7b:P0=dofly[2];break;//2
  25          //                      case 0x77:P0=dofly[3];break;//3
  26          //                      case 0xbe:P0=dofly[4];break;//4
  27          //                      case 0xbd:P0=dofly[5];break;//5
  28          //                      case 0xbb:P0=dofly[6];break;//6
  29          //                      case 0xb7:P0=dofly[7];break;//7
  30          //                      case 0xde:P0=dofly[8];break;//8
  31          //                      case 0xdd:P0=dofly[9];break;//9
  32          //                      case 0xdb:P0=dofly[10];break;//a
  33          //                      case 0xd7:P0=dofly[11];break;//b
  34          //                      case 0xee:P0=dofly[12];break;//c
  35          //                      case 0xed:P0=dofly[13];break;//d
  36          //                      case 0xeb:P0=dofly[14];break;//e
  37          //                      case 0xe7:P0=dofly[15];break;//f
  38          //              }
  39          //      }
  40          //}
  41          
  42          
  43          static void delay(uint i)//延时函数
  44          {
  45   1              while(i--);
  46   1      }
  47          
  48          static int convert(key){
  49   1              int v;
  50   1              switch(key)
  51   1              {
  52   2                      case 0xd7:
  53   2                              v = 0;
  54   2                              break;
C51 COMPILER V9.01   KEY                                                                   05/12/2018 12:37:04 PAGE 2   

  55   2                      case 0xee:
  56   2                              v = 1;
  57   2                              break;
  58   2                      case 0xde:
  59   2                              v = 2;
  60   2                              break;
  61   2                      case 0xbe:
  62   2                              v = 3;
  63   2                              break;
  64   2                      case 0xed:
  65   2                              v = 4;
  66   2                              break;
  67   2                      case 0xdd:
  68   2                              v = 5;
  69   2                              break;
  70   2                      case 0xbd:
  71   2                              v = 6;
  72   2                              break;
  73   2                      case 0xeb:
  74   2                              v = 7;
  75   2                              break;//7
  76   2                      case 0xdb:
  77   2                              v = 8;
  78   2                              break;//8
  79   2                      case 0xbb:
  80   2                              v = 9;
  81   2                              break;//9
  82   2                      case 0xe7:
  83   2                              v = 10;
  84   2                              break;
  85   2                      case 0xb7:
  86   2                              v = 11;
  87   2                              break;
  88   2                      //* #
  89   2      //              case 0xdb:P0=dofly[10];break;//a
  90   2      //              case 0xd7:P0=dofly[11];break;//b
  91   2      //              case 0xee:P0=dofly[12];break;//c
  92   2      //              case 0xed:P0=dofly[13];break;//d
  93   2      //              case 0xeb:P0=dofly[14];break;//e
  94   2      //              case 0xe7:P0=dofly[15];break;//f
  95   2                      case 0xff:
  96   2                              v = -1;
  97   2                              break;
  98   2                      default:
  99   2                              v = -1;
 100   2                              break;
 101   2              }                        
 102   1      
 103   1              return v;
 104   1      }
 105          
 106          
 107          
 108          int keyscan(void)//键盘扫描函数，使用行列反转扫描法 比如：行为低电位，列为高四位
 109          {
 110   1              uchar cord_h,cord_l;    //行列值
 111   1              PORT=0x0f;            //行线输出全为0
 112   1              //cord_h=PORT&0x0f;     //读入列线值
 113   1      
 114   1      
 115   1              if((PORT&0x0f)!=0x0f)    //先检测有无按键按下
 116   1              {
C51 COMPILER V9.01   KEY                                                                   05/12/2018 12:37:04 PAGE 3   

 117   2                      //delay(100);        //去抖
 118   2                      if((PORT&0x0f)!=0x0f)
 119   2                      {
 120   3      
 121   3                          cord_h=PORT&0x0f; //读入列线值
 122   3                          PORT=cord_h|0xf0; //输出当前列线值
 123   3                          cord_l=PORT&0xf0; //读入行线值
 124   3      
 125   3                              while( ((PORT&0x0f) == cord_h) && ((PORT&0xf0) == cord_l) );
 126   3                              return convert(cord_h+cord_l);
 127   3                          //return(cord_h+cord_l);//键盘最后组合码值
 128   3                      }
 129   2              }
 130   1              
 131   1              return convert(0xff);     //返回该值
 132   1              //return 0xff;
 133   1      }
 134          
 135          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    267    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
