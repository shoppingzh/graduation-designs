C51 COMPILER V9.01   SM                                                                    03/21/2018 09:13:54 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SM
OBJECT MODULE PLACED IN ..\Outputs\sm.obj
COMPILER INVOKED BY: D:\Dev\Keil\C51\BIN\C51.EXE ..\Hardware\sm.c BROWSE INCDIR(..\Hardware;..\User) DEBUG OBJECTEXTEND 
                    -PRINT(.\sm.lst) OBJECT(..\Outputs\sm.obj)

line level    source

   1          #include "sm.h"
   2          #include "reg51.h"
   3          #include "timer.h"
   4          
   5          sbit x_ena = P1^0;
   6          sbit x_dir = P1^1;
   7          sbit x_pul = P1^2;
   8          sbit y_ena = P1^3;
   9          sbit y_dir = P1^4;
  10          sbit y_pul = P1^5;
  11          
  12          uint x_count = 0, y_count = 0;                                  //X轴计数、Y轴计数
  13          int x_max_count = -1, y_max_count = -1;                 //X轴最大计数、Y轴最大计数      
  14          ulong count = 0;                                                                //运行计数
  15          long max_count = -1;                                                    //运行最大计数
  16          uchar running = 0;                                                              //是否运行中
  17          
  18          /**************************************************************************/
  19          /******************************* API **************************************/
  20          /**************************************************************************/
  21          
  22          /**
  23          * 电机系统初始化：
  24          *       1. 确定X轴、Y轴电机的初始转向
  25          *       2. 确定X轴、Y轴电机的初始速度
  26          *       3. 初始化定时器，同时使用两个定时器；X、Y轴电机同时使用定时器0作为脉冲发生器，定时器1用于普通计时
  27          */
  28          void sm_init(){
  29   1              sm_x_stop();
  30   1              sm_y_stop();
  31   1              sm_x_dir(SM_DIR_FORWARD);
  32   1              sm_y_dir(SM_DIR_FORWARD);
  33   1              
  34   1              timer_init();
  35   1              timer0_set_time(SM_MIN_PULSE_INTERVAL);                         //X、Y轴电机的脉冲产生最小周期为SM_MIN_PULSE_INTERVAL
  36   1              timer0_start(); 
  37   1      }
  38          
  39          /**
  40          * 调整X轴电机的转向
  41          *       1. SM_DIR_FORWARD：顺时针转动
  42          *       2. SM_DIR_BACKWARD：逆时针转动
  43          *       3. SM_DIR_REVERSE：转变转向，如果当前为顺时针，则调整至逆时针，反之亦然
  44          */
  45          void sm_x_dir(uchar dir){
  46   1              if(dir == SM_DIR_FORWARD){
  47   2                      x_dir = 0;
  48   2              }else if(dir == SM_DIR_BACKWARD){
  49   2                      x_dir = 1;
  50   2              }else if(dir == SM_DIR_REVERSE){
  51   2                      x_dir = ~x_dir;
  52   2              }               
  53   1      }
  54          
C51 COMPILER V9.01   SM                                                                    03/21/2018 09:13:54 PAGE 2   

  55          /**
  56          * 调整Y轴电机的转向
  57          *       1. SM_DIR_FORWARD：顺时针转动
  58          *       2. SM_DIR_BACKWARD：逆时针转动
  59          *       3. SM_DIR_REVERSE：转变转向，如果当前为顺时针，则调整至逆时针，反之亦然
  60          */
  61          void sm_y_dir(uchar dir){
  62   1              if(dir == SM_DIR_FORWARD){
  63   2                      y_dir = 0;
  64   2              }else if(dir == SM_DIR_BACKWARD){
  65   2                      y_dir = 1;
  66   2              }else if(dir == SM_DIR_REVERSE){
  67   2                      y_dir = ~y_dir;
  68   2              }               
  69   1      }
  70          
  71          /**
  72          * 设置X轴电机的转速
  73          * 给定的参数s为rpm即电机每分钟转动的圈数，通过给定rpm得出电机的脉冲宽度
  74          */
  75          void sm_x_speed(uint s){
  76   1              float ms, us;
  77   1              if(s == 0)
  78   1                      return;
  79   1      
  80   1              ms = (60.0 * SM_X_STEP_ANGLE * 1000) / (360.0 * s);             //根据速度计算出脉冲宽度
  81   1              us = ms * 1000ul;
  82   1              x_count = 0;
  83   1              x_max_count = us / SM_MIN_PULSE_INTERVAL;               
  84   1      }
  85          
  86          /**
  87          * 设置Y轴电机的转速
  88          * 给定的参数s为rpm即电机每分钟转动的圈数，通过给定rpm得出电机的脉冲宽度
  89          */
  90          void sm_y_speed(uint s){
  91   1              float ms, us;
  92   1              if(s == 0)
  93   1                      return;
  94   1      
  95   1              ms = (60.0 * SM_Y_STEP_ANGLE * 1000) / (360.0 * s);             //根据速度计算出脉冲宽度
  96   1              us = ms * 1000ul;
  97   1              y_count = 0;
  98   1              y_max_count = us / SM_MIN_PULSE_INTERVAL;               
  99   1      }
 100          
 101          /**
 102          * 启动X轴电机
 103          */
 104          void sm_x_start(){                                                                              //电机系统启动，定时器0开始工作
 105   1              x_ena = 1;                      
 106   1      }
 107          
 108          /**
 109          * 启动Y轴电机
 110          */
 111          void sm_y_start(){                                                                              //电机系统启动，定时器0开始工作 
 112   1              y_ena = 1;              
 113   1      }
 114          
 115          /**
 116          * 停止X轴电机
C51 COMPILER V9.01   SM                                                                    03/21/2018 09:13:54 PAGE 3   

 117          */
 118          void sm_x_stop(){
 119   1              x_ena = 0;
 120   1      }
 121          
 122          /**
 123          * 停止Y轴电机
 124          */
 125          void sm_y_stop(){
 126   1              y_ena = 0;
 127   1      }
 128          
 129          /**
 130          * 指定X轴电机运行一段时间
 131          * @param speed          X轴电机转速
 132          * @param dir            X轴电机转向
 133          * @param time           X轴电机运行时间，单位：毫秒（ms）
 134          */
 135          void sm_x_run(uint speed, uchar dir, ulong time){
 136   1              if(speed == 0)          //转速为0，则原地不动
 137   1                      return;
 138   1      
 139   1              sm_x_speed(speed);
 140   1              sm_x_dir(dir);
 141   1              count = 0;
 142   1              max_count = time * 1000ul / SM_MIN_PULSE_INTERVAL;
 143   1              
 144   1              sm_x_start();
 145   1              running = 1;
 146   1              while(running);
 147   1              sm_x_stop();            
 148   1      }
 149          
 150          /**
 151          * 指定Y轴电机运行一段时间
 152          * @param speed          Y轴电机转速
 153          * @param dir            Y轴电机转向
 154          * @param time           Y轴电机运行时间，单位：毫秒（ms）
 155          */
 156          void sm_y_run(uint speed, uchar dir, ulong time){
 157   1              if(speed == 0)
 158   1                      return;
 159   1      
 160   1              sm_y_speed(speed);
 161   1              sm_y_dir(dir);
 162   1              count = 0;
 163   1              max_count = time * 1000ul / SM_MIN_PULSE_INTERVAL;
 164   1              
 165   1              sm_y_start();
 166   1              running = 1;
 167   1              while(running);
 168   1              sm_y_stop();            
 169   1      }
 170          
 171          /**
 172          * 指定X、Y电机共同运行一段时间
 173          * @param xspeed         X轴电机转速
 174          * @param xdir           X轴电机转向
 175          * @param yspeed         Y轴电机转速
 176          * @param ydir           Y轴电机转向
 177          * @param time           X、Y轴电机共同运行的时间，单位：毫秒(ms)
 178          */
C51 COMPILER V9.01   SM                                                                    03/21/2018 09:13:54 PAGE 4   

 179          void sm_xy_run(uint xspeed, uchar xdir, uint yspeed, uchar ydir, ulong time){
 180   1              //设置运行参数
 181   1              sm_x_speed(xspeed);
 182   1              sm_x_dir(xdir);
 183   1              sm_y_speed(yspeed);
 184   1              sm_y_dir(ydir);
 185   1              count = 0;
 186   1              max_count = time * 1000ul / SM_MIN_PULSE_INTERVAL;              //计时次数
 187   1      
 188   1              //启动电机
 189   1              if(xspeed != 0)
 190   1                      sm_x_start();   
 191   1              if(yspeed != 0)
 192   1                      sm_y_start();
 193   1              
 194   1              running = 1;
 195   1              while(running);         //等待运行结束
 196   1              sm_x_stop();            //结束后停止两个电机
 197   1              sm_y_stop();                    
 198   1      }
 199          
 200          /**
 201          * 定时器0定时时间到，该函数将被定时器0自动回调，请不要调用
 202          */
 203          void timer0_timeout(){
 204   1              //X轴的脉冲时间到
 205   1              if(x_count++ >= x_max_count){           
 206   2                      x_pul = ~x_pul;
 207   2                      x_count = 0;
 208   2              }
 209   1      
 210   1              //Y轴的脉冲时间到
 211   1              if(y_count++ >= y_max_count){           
 212   2                      y_pul = ~y_pul;
 213   2                      y_count = 0;
 214   2              }
 215   1      
 216   1              //定时周期到，表示该阶段的运行结束
 217   1              if(count++ >= max_count){
 218   2                      count = 0;
 219   2                      running = 0;
 220   2              }                               
 221   1      }
 222          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    584    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17      32
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
