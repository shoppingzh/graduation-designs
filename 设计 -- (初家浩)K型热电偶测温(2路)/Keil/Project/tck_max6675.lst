C51 COMPILER V9.01   TCK_MAX6675                                                           03/17/2018 17:52:25 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE TCK_MAX6675
OBJECT MODULE PLACED IN ..\Outputs\tck_max6675.obj
COMPILER INVOKED BY: D:\Dev\Keil\C51\BIN\C51.EXE ..\Hardware\tck_max6675.c BROWSE INCDIR(..\Hardware;..\User) DEBUG OBJE
                    -CTEXTEND PRINT(.\tck_max6675.lst) OBJECT(..\Outputs\tck_max6675.obj)

line level    source

   1          #include "tck_max6675.h"
   2          #include "reg51.h"
   3          #include "intrins.h"
   4          
   5          sbit SO1 = P2^0;
   6          sbit SCK1 = P2^1;
   7          sbit CS1 = P2^2;
   8          sbit SO2 = P2^3;
   9          sbit SCK2 = P2^4;
  10          sbit CS2 = P2^5;
  11          
  12          /**
  13          * TCK热电偶 读取第1路温度
  14          */
  15          uint tck_read_temp1(){
  16   1              uchar i;
  17   1              uint temp;
  18   1      
  19   1              CS1 = 1;                        //启动温度转换
  20   1              _nop_();
  21   1              _nop_();
  22   1              CS1 = 0;                        //停止温度转换，开始读取
  23   1              _nop_();
  24   1              _nop_();
  25   1              for(i=0;i<16;i++){
  26   2                      temp <<= 1;
  27   2                      SCK1 = 1;
  28   2                      _nop_();
  29   2                      SCK1 = 0;       //得到下降沿，短暂延时后读取SO
  30   2                      _nop_();
  31   2                      if(SO1)
  32   2                              temp |= 0x01;
  33   2              }
  34   1      
  35   1              temp <<= 1;             //去除第0、1、2、15位
  36   1              temp >>= 4;
  37   1      
  38   1              return (temp >> 2) - COLD_TEMPERATURE + 1;              //将temp转换为正常温度并减去冷端温度
  39   1      }
  40          
  41          /**
  42          * TCK热电偶 读取第2路温度
  43          */
  44          uint tck_read_temp2(){
  45   1              uchar i;
  46   1              uint temp;
  47   1      
  48   1              CS2 = 1;                        //启动温度转换
  49   1              _nop_();
  50   1              _nop_();
  51   1              CS2 = 0;                        //停止温度转换，开始读取
  52   1              _nop_();
  53   1              _nop_();
  54   1              for(i=0;i<16;i++){
C51 COMPILER V9.01   TCK_MAX6675                                                           03/17/2018 17:52:25 PAGE 2   

  55   2                      temp <<= 1;
  56   2                      SCK2 = 1;
  57   2                      _nop_();
  58   2                      SCK2 = 0;       //得到下降沿，短暂延时后读取SO
  59   2                      _nop_();
  60   2                      if(SO2)
  61   2                              temp |= 0x01;
  62   2              }
  63   1      
  64   1              temp <<= 1;             //去除第0、1、2、15位
  65   1              temp >>= 4;
  66   1      
  67   1              return (temp >> 2) - COLD_TEMPERATURE + 1;              //将temp转换为正常温度并减去冷端温度
  68   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    142    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
