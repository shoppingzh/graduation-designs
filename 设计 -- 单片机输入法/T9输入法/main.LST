C51 COMPILER V9.01   MAIN                                                                  05/12/2018 12:37:04 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Dev\Keil\C51\BIN\C51.EXE main.c LARGE BROWSE INCDIR(.\anjian;.\12864) DEBUG OBJECTEXTEND

line level    source

   1          #include "key.h"
   2          #include "pyinput.h"
   3          #include "string.h"
   4          #include "lcd12864.h"
   5          #include "intrins.h"
   6          #include "stdio.h"
   7          
   8          #ifndef uchar
   9                  #define uchar unsigned char
  10          #endif
  11          
  12          char input_buffer[8];                                   //输入缓冲区，如："524"
  13          int input_index = 0;                                    //当前输入缓冲区的位置
  14          
  15          py_index *matchs[10];                                   //当前输入的拼音所匹配的所有汉字信息
  16          char *opt_words;                                                //当前所有备选汉字，如"wang"对应"往网王忘汪望旺"
  17          uchar opt_idx = 0;                                              //当前备选汉字索引
  18          char page_words[9];                                     //当前页的备选汉字，1行只显示4个汉字，如"wang"对应"1.往2.网3.王4.忘"
  19          uchar page = 0;                                                 //页数，拼音匹配的汉字每4个汉字为1页，默认显示第一页
  20          char words_buffer[65];                                  //屏幕汉字缓冲区
  21          uchar words_idx = 0;                                    //汉字缓冲区索引，指示当前屏幕汉字的个数
  22          
  23          uchar row = 0;                                                  //当前显示的行
  24          uchar col = 1;                                                  //当前显示的列
  25          
  26          bit writing = 0;                                                //是否在书写状态
  27          bit flag = 1;                                                   //光标状态位
  28          uchar count = 0;                                                //定时器计数
  29          
  30          //普通延时
  31          static void delay(uchar t){
  32   1              uchar i,j;
  33   1              for(i=0;i<t;i++)
  34   1                      for(j=0;j<110;j++);
  35   1      }
  36          
  37          
  38          //清除缓冲区
  39          static void clear_input_buffer(){
  40   1              uchar i;
  41   1              for(i=0;i<8;i++){
  42   2                      input_buffer[i] = 0;
  43   2              }
  44   1      }
  45          
  46          //显示当前输入的拼音字符
  47          static void show_letters(){
  48   1              uchar line[17], i, *py;
  49   1              //清空拼音显示行
  50   1              clearline(2);
  51   1      
  52   1              for(i=0;i<17;i++){
  53   2                      line[i] = '\0'; 
  54   2              }
  55   1              py = matchs[0][0].py;
C51 COMPILER V9.01   MAIN                                                                  05/12/2018 12:37:04 PAGE 2   

  56   1              for(i=0;i<16;i++){
  57   2                      if(! *py)
  58   2                              continue;
  59   2      
  60   2                      line[i] = *py;
  61   2                      py++;           
  62   2              }
  63   1              displaystring(2, 0, line);
  64   1      }
  65          
  66          //显示备选字
  67          static void show_options(){
  68   1              uchar start = page*8, i, page_content[17], idx = 0;
  69   1              opt_words = matchs[0][0].pymb;
  70   1      
  71   1              //清空当前页内容
  72   1              clearline(3);
  73   1      
  74   1              //跳过前面的页数
  75   1              for(i=0;i<start;i++){
  76   2                      if(! *opt_words)
  77   2                              break;
  78   2                      opt_words++;
  79   2              }
  80   1              //获取当前页汉字
  81   1              strncpy(page_words, opt_words, 8);
  82   1              page_words[8] = '\0';
  83   1              //生成当前页内容，如："1.往2.网3.王4.忘"
  84   1              for(i=0;i<16;i++){
  85   2                      uchar c = i / 2;
  86   2                      //序号
  87   2                      if(c % 2 == 0){
  88   3                              //数字
  89   3                              if(i % 2 == 0){
  90   4                                      uchar order = (i / 4) + 1;
  91   4                                      //如果当前属于备选，则不显示序号而是显示"*"
  92   4                                      if(order == opt_idx + 1){
  93   5                                              page_content[i] =  '*';
  94   5                                      }else{
  95   5                                              page_content[i] = order + 48;
  96   5                                      }       
  97   4                              }else{
  98   4                                      //点
  99   4                                      page_content[i] = '.';
 100   4                              }               
 101   3                      }else{
 102   3                              //汉字
 103   3                              page_content[i] = page_words[idx++];
 104   3                      }       
 105   2              }
 106   1              page_content[16] = '\0';        
 107   1      
 108   1              //显示当前页的内容
 109   1              displaystring(3, 0, page_content);
 110   1      }
 111          
 112          //上一页
 113          static void prev_page(){
 114   1              if(page > 0){
 115   2                      page--;
 116   2                      opt_idx = 3;
 117   2              }               
C51 COMPILER V9.01   MAIN                                                                  05/12/2018 12:37:04 PAGE 3   

 118   1      }
 119          
 120          //上一页
 121          static void next_page(){
 122   1              page++;
 123   1              opt_idx = 0;
 124   1      }
 125          
 126          //在屏幕上写一个汉字
 127          static void write_word(uchar *word){
 128   1              //写到行末
 129   1              if(col > 7){
 130   2                      row++;
 131   2                      col = 0;
 132   2                      //文本框写满，重新来过
 133   2                      if(row > 1){
 134   3                              clearline(0);
 135   3                              clearline(1);
 136   3                              row = 0;
 137   3                              col = 1;
 138   3                      }
 139   2              }
 140   1              
 141   1              //显示当前汉字
 142   1              displaystring(row, col++, word);
 143   1      
 144   1              //将当前汉字存储到缓冲区
 145   1      //      if(words_idx < 61){
 146   1      //              words_buffer[words_idx++] = word[0];
 147   1      //              words_buffer[words_idx++] = word[1];    
 148   1      //      }       
 149   1      }
 150          
 151          //在屏幕上显示当前汉字
 152          static void show_current(){
 153   1              uchar word[3] = {0, 0, 0}, idx;
 154   1      
 155   1              //获取当前汉字
 156   1              idx = opt_idx * 2;
 157   1              word[0] = page_words[idx];
 158   1              word[1] = page_words[idx + 1];
 159   1      
 160   1              write_word(word);       
 161   1      }
 162          
 163          //删除一个汉字
 164          static void delete_word(){
 165   1              if(row >= 0){
 166   2                      if(col > 0){
 167   3                              col--;
 168   3                      }else{
 169   3                              if(row > 0){
 170   4                                      col = 7;
 171   4                                      row--;
 172   4                              }
 173   3                      }
 174   2              }
 175   1              displaystring(row, col, "  ");
 176   1      }
 177          
 178          
 179          //定时器初始化
C51 COMPILER V9.01   MAIN                                                                  05/12/2018 12:37:04 PAGE 4   

 180          static void timer_init(){
 181   1              TMOD = 0x01;
 182   1              TH0 = 0x3c;
 183   1              TL0 = 0xb0;
 184   1              EA = 1;
 185   1              ET0 = 1;
 186   1              //TR0 = 1;
 187   1      }               
 188          
 189          void main(){
 190   1              initlcm();
 191   1              displaystring(2, 0, "欢迎使用输入法，");
 192   1              displaystring(3, 0, "输入内容试试看！");
 193   1      
 194   1              timer_init();
 195   1      
 196   1              while(1){
 197   2                      int key = keyscan();
 198   2      
 199   2                      if(key == -1){
 200   3                              //错误
 201   3                      }else if(key == 0){     
 202   3                              //不在书写状态按空格则在屏幕上书写一个空格
 203   3                              if(!writing){
 204   4                                      write_word("  ");
 205   4                                      continue;       
 206   4                              }
 207   3                              //按下0键，将当前汉字显示到屏幕上
 208   3                              show_current();                 
 209   3      
 210   3                              //清理
 211   3                              clear_input_buffer();
 212   3                              input_index = 0;
 213   3                              opt_idx = 0;
 214   3                              writing = 0;
 215   3      
 216   3                              clearline(2);                           
 217   3                              clearline(3);                   
 218   3                      }else if(key == 1){
 219   3                              //按下1键，开启或关闭光标
 220   3                              if(TR0)
 221   3                                      TR0 = 0;
 222   3                              else{
 223   4                                      TR0 = 1;
 224   4                                      displaystring(2, 2, "适用型功能，");
 225   4                                      displaystring(3, 0, "请谨慎使用！");
 226   4                              } 
 227   3                                      
 228   3                      }else if(key == 10){
 229   3                              if(!writing){
 230   4                                      //如果当前不是在书写状态，按下*键删除一个屏幕上的已有汉字
 231   4                                      delete_word();
 232   4                                      continue;
 233   4                              }
 234   3      
 235   3                              //备选汉字列表左移一位
 236   3                              if(opt_idx > 0){
 237   4                                      opt_idx--;
 238   4                              }else{
 239   4                                      prev_page();
 240   4                              }
 241   3                              show_options();         
C51 COMPILER V9.01   MAIN                                                                  05/12/2018 12:37:04 PAGE 5   

 242   3                      }else if(key == 11){
 243   3                              if(!writing){
 244   4                                      //全屏显示：显示汉字缓冲区的所有内容
 245   4                                      //full_screen();
 246   4                                      continue;       
 247   4                              }
 248   3                                      
 249   3                              //备选汉字列表右移一位
 250   3                              if(opt_idx < 3){
 251   4                                      opt_idx++;
 252   4                              }else{
 253   4                                      next_page();
 254   4                              }
 255   3                              show_options();
 256   3                      }else{
 257   3                              if(input_index > 5){
 258   4                                      continue;
 259   4                              }
 260   3                              writing = 1;
 261   3                              page = 0;
 262   3      
 263   3                              //正在输入，获取输入的拼音和汉字
 264   3                              input_buffer[input_index++] = key + 48;
 265   3                              get_matched_pymb(input_buffer, matchs);
 266   3      
 267   3                              //显示输入的拼音字符
 268   3                              show_letters();
 269   3                              
 270   3                              //显示备选字
 271   3                              show_options();
 272   3                      }
 273   2              }
 274   1      }
 275          
 276          //定时器0中断，用来显示光标
 277          void timer0_int() interrupt 1{
 278   1              uchar r, c;
 279   1              TH0 = 0x3c;
 280   1              TL0 = 0xb0;
 281   1              if(count++ < 10)
 282   1                      return;
 283   1      
 284   1              count = 0;
 285   1      
 286   1              //复制一份，防止row与col被动态更改
 287   1              r = row;
 288   1              c = col;
 289   1      
 290   1              if(flag){
 291   2                      displaystring(r, c, "_");       
 292   2              }else{
 293   2                      displaystring(r, c, "  ");
 294   2              }
 295   1              flag = ~flag;
 296   1              
 297   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1111    ----
   CONSTANT SIZE    =     68    ----
   XDATA SIZE       =    123      49
C51 COMPILER V9.01   MAIN                                                                  05/12/2018 12:37:04 PAGE 6   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
