C51 COMPILER V9.01   LCD12864                                                              05/09/2018 14:16:58 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN ..\Outputs\lcd12864.obj
COMPILER INVOKED BY: D:\Dev\Keil\C51\BIN\C51.EXE ..\Hardware\lcd12864.c BROWSE INCDIR(..\User,..\Hardware) DEBUG OBJECTE
                    -XTEND PRINT(..\Listings\lcd12864.lst) OBJECT(..\Outputs\lcd12864.obj)

line level    source

   1          #include "lcd12864.h"
   2          #include "reg51.h"
   3          #define DB P0
   4          
   5          sbit RS = P2^0;
   6          sbit RW = P2^1;
   7          sbit EN = P2^2;
   8          sbit RST = P2^3;
   9          sbit PSB = P2^4;
  10          
  11          /**
  12          * 内部延时程序
  13          */
  14          static void delay(uchar t){
  15   1              uchar i, j;
  16   1              for(i=0;i<t;i++){
  17   2                      for(j=0;j<50;j++);
  18   2              }
  19   1      }
  20          
  21          /**
  22          * LCD12864 等待忙信号
  23          */
  24          static void wait_busy(){
  25   1              uchar t;
  26   1              DB = 0xff;
  27   1              RS = 0;
  28   1              RW = 1;
  29   1              EN = 1;
  30   1              for(t=0;t<10;t++){
  31   2                      if(!(DB & 0x80))
  32   2                              break;
  33   2              }
  34   1              EN = 0;
  35   1      }
  36          
  37          /**
  38          * 获取所在位置的地址
  39          * @param row    行索引，从1开始
  40          * @param col    列索引，从1开始
  41          */
  42          static uchar get_addr(uchar row, uchar col){
  43   1              uchar adr = 0x80;
  44   1              if(row == 1){
  45   2                      adr = 0x80 + col - 1;   
  46   2              }else if(row == 2){
  47   2                      adr = 0x90 + col - 1;
  48   2              }else if(row == 3){
  49   2                      adr = 0x88 + col - 1;
  50   2              }else if(row == 4){
  51   2                      adr = 0x98 + col - 1;
  52   2              }
  53   1              return adr;
  54   1      }
C51 COMPILER V9.01   LCD12864                                                              05/09/2018 14:16:58 PAGE 2   

  55          
  56          /**
  57          * LCD12864 初始化，普通模式
  58          */
  59          void lcd_init(){
  60   1              RST = 0;                                //复位
  61   1              delay(100);
  62   1              RST = 1;
  63   1              PSB = 1;
  64   1              delay(100);
  65   1      
  66   1              lcd_write_com(0x30);    //使用8位MPU接口
  67   1              delay(1);
  68   1              lcd_write_com(0x30);    //使用基本指令集
  69   1              delay(1);
  70   1              lcd_write_com(0x0c);    //打开显示
  71   1              delay(1);
  72   1              lcd_write_com(0x01);    //清屏
  73   1              delay(1);
  74   1              lcd_write_com(0x06);    //设定游标移动模式      
  75   1      }
  76          
  77          /**
  78          * LCD12864 写指令
  79          */
  80          void lcd_write_com(uchar com){
  81   1              wait_busy();
  82   1              RS = 0;
  83   1              RW = 0;
  84   1              EN = 0;
  85   1              delay(1);
  86   1              DB = com;
  87   1              EN = 1;
  88   1              delay(1);
  89   1              EN = 0;
  90   1      }
  91          
  92          /**
  93          * LCD12864 写数据
  94          */
  95          void lcd_write_data(uchar dat){
  96   1              wait_busy();
  97   1              RS = 1;
  98   1              RW = 0;
  99   1              EN = 0;
 100   1              delay(1);
 101   1              DB = dat;
 102   1              EN = 1;
 103   1              delay(1);
 104   1              EN = 0;
 105   1      }
 106          
 107          /**
 108          * LCD12864 读数据（测忙）
 109          */
 110          uchar lcd_read_data(){
 111   1              uchar dat;
 112   1              wait_busy();
 113   1              RS = 1;
 114   1              RW = 1;
 115   1              EN = 0;
 116   1              delay(1);
C51 COMPILER V9.01   LCD12864                                                              05/09/2018 14:16:58 PAGE 3   

 117   1              EN = 1;
 118   1              delay(1);
 119   1              dat = DB;
 120   1              EN = 0;
 121   1              delay(1);
 122   1              return dat;
 123   1      }
 124          
 125          /**
 126          * LCD12864 在屏幕上绘制点
 127          */
 128          void lcd_draw_point(uchar x, uchar y){
 129   1              uint bt, dat;
 130   1              uchar x_adr, y_adr, high, low;          //X、Y地址，写入的高低字节
 131   1              lcd_write_com(0x34);
 132   1              lcd_write_com(0x34);
 133   1      
 134   1              //确定显示位置
 135   1              y_adr = 0x80 + y % 32;
 136   1              if(y > 31)
 137   1                      x_adr = 0x88 + x / 16;
 138   1              else
 139   1                      x_adr = 0x80 + x / 16;
 140   1      
 141   1              //读取以前点的信息
 142   1              bt = 0x8000 >> (x % 16);
 143   1              lcd_write_com(y_adr);   //写入读取位置，读取这个点的数据
 144   1              lcd_write_com(x_adr);
 145   1              lcd_read_data();                //舍弃第一个字节
 146   1              dat = lcd_read_data();
 147   1              dat <<= 8;
 148   1              dat |= lcd_read_data();
 149   1              bt |= dat;                              //将要显示的点或上以前的点
 150   1              high = bt >> 8;
 151   1              low = bt;
 152   1      
 153   1              //写入新的信息
 154   1              lcd_write_com(y_adr);   
 155   1              lcd_write_com(x_adr);
 156   1              lcd_write_data(high);
 157   1              lcd_write_data(low);
 158   1      
 159   1              lcd_write_com(0x36);
 160   1              lcd_write_com(0x30);
 161   1      }
 162          
 163          /**
 164          * LCD12864 清除画图内容
 165          */
 166          void lcd_graphics_clear(){
 167   1              uchar i, j;
 168   1              lcd_write_com(0x34);
 169   1              lcd_write_com(0x34);
 170   1      
 171   1              for(i=0;i<32;i++){
 172   2                      lcd_write_com(0x80 + i);
 173   2                      lcd_write_com(0x80);
 174   2                      for(j=0;j<32;j++){
 175   3                              lcd_write_data(0x00);
 176   3                      }
 177   2              }
 178   1      
C51 COMPILER V9.01   LCD12864                                                              05/09/2018 14:16:58 PAGE 4   

 179   1              lcd_write_com(0x36);
 180   1              lcd_write_com(0x30);
 181   1      }
 182          
 183          /**
 184          * LCD12864 在指定位置书写ASCII码
 185          * @param row    显示行
 186          * @param col    显示列
 187          * @param left   左ASCII码字符
 188          * @param right  右ASCII码字符
 189          */
 190          void lcd_display_ascii(uchar row, uchar col, char left, char right){
 191   1              lcd_write_com(0x30);            
 192   1              lcd_write_com(get_addr(row, col));
 193   1      
 194   1              lcd_write_data(left == 0 ? ' ' : left);
 195   1              lcd_write_data(right == 0 ? ' ' : right);
 196   1      }
 197          
 198          /**
 199          * LCD12864 在指定的位置书写中文
 200          * @param row    中文字符串的显示行，该值不能大于4
 201          * @param col    中文字符串的显示列，该值不能大于8
 202          * @param str    中文字符串
 203          */
 204          void lcd_display_string(uchar row, uchar col, char* str){
 205   1              uchar adr;
 206   1              if(row < 1 || col < 1 || row > 4 || col > 8)
 207   1                      return;
 208   1              adr = get_addr(row, col);
 209   1      
 210   1              lcd_write_com(adr);
 211   1              while(*str){
 212   2                      lcd_write_data(*str);
 213   2                      str++;
 214   2              }
 215   1      }
 216          
 217          /**
 218          * 显示数字，最多显示5位
 219          */
 220          void lcd_display_digit(uchar row, uchar col, uint d){
 221   1              uchar addr = get_addr(row, col);
 222   1              lcd_write_com(0x30);
 223   1              lcd_write_com(addr);                                            
 224   1              if(d <= 9){
 225   2                      lcd_write_data(' ');
 226   2                      lcd_write_data(d + 48);
 227   2              }else if(d <= 99){
 228   2                      lcd_write_data(d / 10 + 48);
 229   2                      lcd_write_data(d % 10 + 48);
 230   2              }else if(d <= 999){
 231   2                      lcd_write_data(' ');
 232   2                      lcd_write_data(d / 100 + 48);
 233   2                      lcd_write_com(addr + 1);
 234   2                      lcd_write_data(d / 10 % 10 + 48);
 235   2                      lcd_write_data(d % 10 + 48);
 236   2              }else if(d <= 9999){
 237   2                      lcd_write_data(d / 1000 + 48);
 238   2                      lcd_write_data(d / 100 % 10 + 48);
 239   2                      lcd_write_com(addr + 1);
 240   2                      lcd_write_data(d / 10 % 10 + 48);
C51 COMPILER V9.01   LCD12864                                                              05/09/2018 14:16:58 PAGE 5   

 241   2                      lcd_write_data(d % 10 + 48);
 242   2              }else if(d <= 99999){
 243   2                      lcd_write_data(' ');
 244   2                      lcd_write_data(d / 10000 + 48);
 245   2                      lcd_write_com(addr + 1);
 246   2                      lcd_write_data(d / 1000 % 10 + 48);
 247   2                      lcd_write_data(d / 100 % 10 + 48);
 248   2                      lcd_write_com(addr + 2);
 249   2                      lcd_write_data(d / 10 % 10 + 48);
 250   2                      lcd_write_data(d % 10 + 48);
 251   2              }
 252   1      }
 253          
 254          /**
 255          * 清屏
 256          */
 257          void lcd_clear(){
 258   1              lcd_write_com(0x01);
 259   1              delay(50);
 260   1      }
 261          
 262          /**
 263          * 清除某行内容
 264          * @line         行（从1开始）
 265          */
 266          void lcd_clear_line(uchar line){
 267   1              lcd_display_ascii(line, 1, ' ', ' ');
 268   1              lcd_display_ascii(line, 2, ' ', ' ');
 269   1              lcd_display_ascii(line, 3, ' ', ' ');
 270   1              lcd_display_ascii(line, 4, ' ', ' ');
 271   1              lcd_display_ascii(line, 5, ' ', ' ');
 272   1              lcd_display_ascii(line, 6, ' ', ' ');
 273   1              lcd_display_ascii(line, 7, ' ', ' ');
 274   1              lcd_display_ascii(line, 8, ' ', ' ');
 275   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    882    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
