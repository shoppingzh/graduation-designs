C51 COMPILER V9.01   MAIN                                                                  03/30/2018 14:08:38 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\Outputs\main.obj
COMPILER INVOKED BY: D:\Dev\Keil\C51\BIN\C51.EXE ..\User\main.c BROWSE INCDIR(..\Hardware;..\User) DEBUG OBJECTEXTEND PR
                    -INT(.\main.lst) OBJECT(..\Outputs\main.obj)

line level    source

   1          #include "reg51.h"
   2          #include "intrins.h"
   3          #include "uart.h"
   4          #include "temper.h"
   5          #include "lcd1602.h"
   6          #include "stdio.h"
   7          
   8          #define uchar unsigned char
   9          #define uint unsigned int
  10          
  11          #define MODE_WORK 0x10                          //工作模式
  12          #define MODE_SETTINGS 0x11                      //设置模式
  13          
  14          void delay(uchar t);
  15          void display();
  16          void read_temps();
  17          
  18          sbit warning = P3^7;
  19          
  20          uchar t1, t2, t3, t4;
  21          uchar road;
  22          bit update;
  23          uchar mode = MODE_WORK;
  24          uchar max_temp = 255;
  25          
  26          /////////MAIN
  27          void main(){
  28   1              uart_init();
  29   1              lcd_simple_init();
  30   1      
  31   1              while(1){
  32   2                      if(mode == MODE_WORK){
  33   3                              read_temps();
  34   3                              if(update){
  35   4                                      display();
  36   4                                      update = 0;
  37   4                              }
  38   3                              if(t1 > max_temp || t2 > max_temp ||
  39   3                                      t3 > max_temp || t4 > max_temp){
  40   4                                      warning = 0;    
  41   4                              }else{
  42   4                                      warning = 1;
  43   4                              }
  44   3                      }       
  45   2              }
  46   1      }
  47          
  48          //读取温度并显示
  49          void read_temps(){
  50   1              uchar temp;
  51   1              temp = temper_readtemp1();
  52   1              if(temp != t1){
  53   2                      t1 = temp;
  54   2                      update = 1;
C51 COMPILER V9.01   MAIN                                                                  03/30/2018 14:08:38 PAGE 2   

  55   2              }
  56   1              delay(10);
  57   1                      
  58   1              temp = temper_readtemp2();
  59   1              if(temp != t2){
  60   2                      t2 = temp;
  61   2                      update = 1;     
  62   2              }
  63   1              delay(10);
  64   1      
  65   1              temp = temper_readtemp3();
  66   1              if(temp != t3){
  67   2                      t3 = temp;
  68   2                      update = 1;     
  69   2              }
  70   1              delay(10);
  71   1      
  72   1              temp = temper_readtemp4();
  73   1              if(temp != t4){
  74   2                      t4 = temp;
  75   2                      update = 1;     
  76   2              }
  77   1      }
  78          
  79          void delay3s(void)   //误差 0us
  80          {
  81   1          unsigned char a,b,c;
  82   1          for(c=189;c>0;c--)
  83   1              for(b=230;b>0;b--)
  84   1                  for(a=33;a>0;a--);
  85   1      }
  86          
  87          //串口接收回调
  88          void uart_received(uchar cmd){
  89   1              //设置优先
  90   1              if(mode == MODE_SETTINGS){
  91   2                      char str[3];
  92   2                      max_temp = cmd;
  93   2                      sprintf(str, "%d", (int)max_temp);
  94   2                      lcd_display_string(2, 1, "Warning: ");
  95   2                      lcd_display_string(2, 10, str);
  96   2      
  97   2                      //等待3s切回工作模式
  98   2                      delay3s();
  99   2                      update = 1;
 100   2                      mode = MODE_WORK;
 101   2                      return; 
 102   2              }
 103   1      
 104   1              if(cmd == 1){
 105   2                      mode = MODE_WORK;
 106   2                      uart_send(t1);
 107   2              }else if(cmd == 2){
 108   2                      mode = MODE_WORK;
 109   2                      uart_send(t2);
 110   2              }else if(cmd == 3){
 111   2                      mode = MODE_WORK;
 112   2                      uart_send(t3);
 113   2              }else if(cmd == 4){
 114   2                      mode = MODE_WORK;
 115   2                      uart_send(t4);
 116   2              }else if(cmd == 0x10){
C51 COMPILER V9.01   MAIN                                                                  03/30/2018 14:08:38 PAGE 3   

 117   2                      mode = MODE_SETTINGS;
 118   2                      lcd_clear();
 119   2                      lcd_display_string(1, 1, "Setting..");
 120   2              }       
 121   1      }
 122          
 123          //延时
 124          void delay(uchar t){
 125   1              int i, j;
 126   1              for(i=0;i<t;i++)
 127   1                      for(j=0;j<110;j++);
 128   1      }
 129          
 130          //显示
 131          void display(){
 132   1              char arr1[5], arr2[5], arr3[5], arr4[5];
 133   1              lcd_clear();
 134   1              lcd_display_string(1, 1, "T1: ");
 135   1              lcd_display_string(1, 8, "T2: ");
 136   1              lcd_display_string(2, 1, "T3: ");
 137   1              lcd_display_string(2, 8, "T4: ");
 138   1      
 139   1              sprintf(arr1, "%d", (int)t1);
 140   1              sprintf(arr2, "%d", (int)t2);
 141   1              sprintf(arr3, "%d", (int)t3);
 142   1              sprintf(arr4, "%d", (int)t4);
 143   1              lcd_display_string(1, 4, arr1);
 144   1              lcd_display_string(1, 11, arr2);
 145   1              lcd_display_string(2, 4, arr3);
 146   1              lcd_display_string(2, 11, arr4);
 147   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    514    ----
   CONSTANT SIZE    =     43    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
